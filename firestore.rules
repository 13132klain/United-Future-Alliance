rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Helper function to check if user is admin
    function isAdmin() {
      return isAuthenticated() && 
             (request.auth.token.email in ['admin@ufa.org', 'omondikeyvin@gmail.com'] ||
              request.auth.token.email.matches('.*@ufa\\.org$'));
    }
    
    // Helper function to check if user owns the document
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    // Events collection - Admin can read/write, public can read
    match /events/{eventId} {
      // Allow public read access to events
      allow read: if true;
      
      // Only admins can create, update, or delete events
      allow create: if isAdmin();
      allow update: if isAdmin();
      allow delete: if isAdmin();
    }
    
    // News collection - Admin can read/write, public can read
    match /news/{newsId} {
      // Allow public read access to news
      allow read: if true;
      
      // Only admins can create, update, or delete news
      allow create: if isAdmin();
      allow update: if isAdmin();
      allow delete: if isAdmin();
    }
    
    // Leaders collection - Admin can read/write, public can read
    match /leaders/{leaderId} {
      // Allow public read access to leaders
      allow read: if true;
      
      // Only admins can create, update, or delete leaders
      allow create: if isAdmin();
      allow update: if isAdmin();
      allow delete: if isAdmin();
    }
    
    // Users collection - Users can read/write their own data, admins can read all
    match /users/{userId} {
      // Users can read and write their own data
      allow read, write: if isOwner(userId);
      
      // Admins can read all user data
      allow read: if isAdmin();
    }
    
    // Memberships collection - Public can create, admins can read/update/delete
    match /memberships/{membershipId} {
      // Anyone can create a membership application
      allow create: if true;
      
      // Only admins can read, update, or delete memberships
      allow read: if isAdmin();
      allow update: if isAdmin();
      allow delete: if isAdmin();
    }
    
    // Default rule - deny all other access
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
